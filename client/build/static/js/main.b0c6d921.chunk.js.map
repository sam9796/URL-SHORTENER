{"version":3,"sources":["components/Spinner.js","components/InputURL.js","components/urlList.js","App.js","index.js"],"names":["Spinner","className","InputURL","sendURL","useEffect","M","AutoInit","useState","input","setInput","inputNote","setInputNote","onSubmit","e","preventDefault","validURL","isWebUri","url","note","error","msg","required","placeholder","type","value","onChange","target","UrlList","result","search","setSearch","list","urls","setUrls","load","a","fetch","method","headers","json","resp","length","Search","toSearch","trim","body","JSON","stringify","resp1","style","paddingBottom","id","map","val","shortID","paddingTop","longURL","Note","App","loading","setLoading","setResult","shortenURL","console","log","shortURL","storeData","toast","html","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0c6d921.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Spinner = () => {\r\n  return (     \r\n    <div className=\"preloader-wrapper big active\">\r\n        <div className=\"spinner-layer spinner-blue-only\">\r\n            <div className=\"circle-clipper left\">\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n            <div className=\"gap-patch\">\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n            <div className=\"circle-clipper right\">\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize';\r\nimport validURL from 'valid-url';\r\n\r\nconst InputURL = ({ sendURL }) => {\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  });\r\n\r\n  const [input, setInput] = useState('');\r\n  const [inputNote, setInputNote] = useState('');\r\n\r\n  const onChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const onChange1 = (e) => {\r\n    setInputNote(e.target.value);\r\n  };\r\n\r\n  // handling Submit\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validURL.isWebUri(input)) {\r\n      sendURL({ error: 'Invalid URL', msg: 'Please Enter a Valid URL' });\r\n    } else {\r\n      // Call the Server with Long URL\r\n      sendURL({url: input,note:inputNote });\r\n      setInput('');\r\n      setInputNote('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='row'>\r\n      <form onSubmit={onSubmit}>\r\n        <div className='col s12'>\r\n          <h3 className='center'>URL Shortener Application</h3>\r\n          <div className='input-field'>\r\n            <i className='material-icons prefix'>insert_link</i>\r\n            <input required placeholder=\"Enter URL Here\" type='url' className='validate' value={input} onChange={onChange} />\r\n          </div>\r\n          <div className='input-field'>\r\n            <i className='material-icons prefix'>note_add</i>\r\n            <input  placeholder=\"Enter Note Here\" type='text' className='validate' value={inputNote} onChange={onChange1} />\r\n          </div>\r\n          <div className='input-field center'>\r\n            <button className='btn waves-effect waves-light' type='submit'>\r\n              GENERATE\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default InputURL;\r\n","import React,{useEffect,useState} from 'react'\r\nimport M from 'materialize-css/dist/js/materialize';\r\n\r\nfunction UrlList({result}) {\r\n    const [search,setSearch]=useState('')\r\n    const [urls,setUrls]=useState({list:[]})\r\n\r\n    const load=async ()=>{\r\n        let result=await fetch('http://localhost:8081/api/getAllUrls',{\r\n            method:\"GET\",\r\n            headers:{\r\n              'Content-Type':'application/json'\r\n            },\r\n        })\r\n        let resp=await result.json()\r\n        if(resp.urls.length>0){\r\n         setUrls({list:resp.urls})\r\n        }\r\n    }\r\n    const Search=async ()=>{\r\n        const toSearch=search.trim()\r\n        if(toSearch===\"\"){load();return;}\r\n        const resp=await fetch('http://localhost:8081/api/search',{\r\n          method:'POST',\r\n          headers:{\r\n            'Content-Type':'application/json'\r\n          },\r\n          body:JSON.stringify({toSearch:toSearch})\r\n        }) \r\n        const resp1=await resp.json()\r\n        if(resp1.urls.length>0){\r\n            setUrls({list:resp1.urls})\r\n        }\r\n        else {\r\n            load()\r\n        }\r\n    }\r\n\r\n    const Change=(e)=>{\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        M.AutoInit()\r\n        Search()\r\n},[search,result])\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m8\" style={{paddingBottom:\"1.5vw\"}}>\r\n      <div className=\"input-field\">\r\n        <i className=\"material-icons prefix\">search</i>\r\n          <input\r\n              id=\"short\"\r\n              placeholder=\"Enter text to search\" \r\n              value={search}\r\n              onChange={Change}\r\n              type=\"text\"\r\n            />\r\n        </div>\r\n    </div>\r\n      {urls.list.map((val)=>{\r\n        return (val.shortID===''?<></>:<>\r\n        <div className=\"row\" style={{paddingTop:\"1.5vw\"}}>\r\n        <div className=\"col s12 m8\" >\r\n      <div className=\"input-field\">\r\n        <i className=\"material-icons prefix\">share</i>\r\n          <input\r\n              placeholder=\"Enter text to search\" \r\n              value={val.shortID}\r\n              type=\"text\"\r\n            />\r\n        </div>\r\n    </div>\r\n        <div className=\"col s12 m8\" >\r\n      <div className=\"input-field\">\r\n        <i className=\"material-icons prefix\">share</i>\r\n          <input\r\n              placeholder=\"Enter text to search\" \r\n              value={val.longURL}\r\n              type=\"text\"\r\n            />\r\n        </div>\r\n    </div>\r\n        <div className=\"col s12 m8\">\r\n      <div className=\"input-field\">\r\n        <i className=\"material-icons prefix\">note</i>\r\n          <input\r\n              value={val.Note}\r\n              type=\"text\"\r\n            />\r\n        </div>\r\n    </div>\r\n        </div>\r\n        </>)\r\n      })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UrlList\r\n","import React, {useState, useEffect} from 'react'\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize';\r\n\r\n\r\nimport Spinner from './components/Spinner';\r\nimport InputURL from './components/InputURL';\r\nimport URList from './components/urlList.js';\r\n\r\nconst App = () => {\r\n\r\n  // Autoinit All JS components\r\n  useEffect(()=> {\r\n    M.AutoInit();\r\n  });\r\n\r\n  // Input Initialization\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState('');\r\n\r\n  \r\n  // Call APIs\r\n  const shortenURL = async (url,note) => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(url,note)\r\n      const storeData=async ()=>{\r\n        let resp= await fetch('http://localhost:8081/api/v2/shorten',{\r\n          method:'POST',\r\n          headers:{\r\n            'Content-Type':'application/json'\r\n          },\r\n          body:JSON.stringify({longURL:url,note:note})\r\n        })\r\n        let resp1=await resp.json();\r\n        setResult(resp1.shortURL);\r\n      }\r\n      storeData()\r\n      setLoading(false);\r\n    } catch (e) {\r\n      M.toast({html: 'Sorry! Server Error occurred'});\r\n    }\r\n  };\r\n\r\n  // handling Submit\r\n  const handleInput = (e) => {\r\n    const {url,note} = e;\r\n    shortenURL(url,note);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <InputURL sendURL={handleInput}/>\r\n      <div className=\"row center\">\r\n        {\r\n          loading ? <Spinner/> : <URList result={result}/>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}